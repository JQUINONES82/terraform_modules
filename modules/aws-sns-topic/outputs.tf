/**
  * <!-- Module outputs go here.
  *      Always include descriptions as they will populate
  *      autogenerated documentation. -->
*/

output "arn" {
  description = "The ARN of the SNS topic"
  value       = try(aws_sns_topic.this[0].arn, "")
}

output "id" {
  description = "The ARN of the SNS topic"
  value       = try(aws_sns_topic.this[0].id, "")
}

output "name" {
  description = "The name of the topic"
  value       = try(aws_sns_topic.this[0].name, "")
}

output "display_name" {
  description = "The display name for the topic"
  value       = try(aws_sns_topic.this[0].display_name, "")
}

output "policy" {
  description = "The fully-formed AWS policy as JSON"
  value       = try(aws_sns_topic.this[0].policy, "")
}

output "owner" {
  description = "The AWS Account ID of the SNS topic owner"
  value       = try(aws_sns_topic.this[0].owner, "")
}

output "beginning_archive_time" {
  description = "The oldest timestamp at which a FIFO topic subscriber can start a replay"
  value       = try(aws_sns_topic.this[0].beginning_archive_time, "")
}

output "fifo_topic" {
  description = "Whether or not the topic is FIFO"
  value       = try(aws_sns_topic.this[0].fifo_topic, false)
}

output "content_based_deduplication" {
  description = "Whether content-based deduplication is enabled"
  value       = try(aws_sns_topic.this[0].content_based_deduplication, false)
}

# Subscription outputs
output "subscription_arns" {
  description = "Map of subscription ARNs"
  value = {
    for k, v in aws_sns_topic_subscription.this : k => v.arn
  }
}

output "subscription_ids" {
  description = "Map of subscription IDs"
  value = {
    for k, v in aws_sns_topic_subscription.this : k => v.id
  }
}

output "subscription_confirmation_was_authenticated" {
  description = "Map of whether the subscription confirmation was authenticated"
  value = {
    for k, v in aws_sns_topic_subscription.this : k => v.confirmation_was_authenticated
  }
}

output "subscription_owner_id" {
  description = "Map of subscription owner IDs"
  value = {
    for k, v in aws_sns_topic_subscription.this : k => v.owner_id
  }
}

output "subscription_pending_confirmation" {
  description = "Map of whether the subscription is pending confirmation"
  value = {
    for k, v in aws_sns_topic_subscription.this : k => v.pending_confirmation
  }
}

# Topic policy outputs
output "topic_policy_arn" {
  description = "The ARN of the topic policy"
  value       = try(aws_sns_topic_policy.this[0].arn, try(aws_sns_topic_policy.generated[0].arn, ""))
}

# Complete topic information
output "topic" {
  description = "Complete SNS topic object"
  value       = try(aws_sns_topic.this[0], {})
  sensitive   = true
}

output "subscriptions" {
  description = "Complete subscription objects"
  value       = aws_sns_topic_subscription.this
  sensitive   = true
}
