/**
  * <!-- Module outputs go here.
  *      Always include descriptions as they will populate
  *      autogenerated documentation. -->
*/

output "id" {
  description = "ID of the security group"
  value       = aws_security_group.this.id
}

output "arn" {
  description = "ARN of the security group"
  value       = aws_security_group.this.arn
}

output "name" {
  description = "Name of the security group"
  value       = aws_security_group.this.name
}

output "description" {
  description = "Description of the security group"
  value       = aws_security_group.this.description
}

output "vpc_id" {
  description = "VPC ID of the security group"
  value       = aws_security_group.this.vpc_id
}

output "owner_id" {
  description = "Owner ID of the security group"
  value       = aws_security_group.this.owner_id
}

output "tags_all" {
  description = "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block"
  value       = aws_security_group.this.tags_all
}

output "ingress_rule_ids" {
  description = "List of IDs of the ingress rules"
  value       = [for rule in aws_vpc_security_group_ingress_rule.this : rule.security_group_rule_id]
}

output "egress_rule_ids" {
  description = "List of IDs of the egress rules" 
  value       = [for rule in aws_vpc_security_group_egress_rule.this : rule.security_group_rule_id]
}

output "ingress_rules" {
  description = "Map of ingress rule details"
  value = {
    for idx, rule in aws_vpc_security_group_ingress_rule.this : idx => {
      id          = rule.security_group_rule_id
      description = rule.description
      ip_protocol = rule.ip_protocol
      from_port   = rule.from_port
      to_port     = rule.to_port
      cidr_ipv4   = rule.cidr_ipv4
      cidr_ipv6   = rule.cidr_ipv6
      tags        = rule.tags_all
    }
  }
}

output "egress_rules" {
  description = "Map of egress rule details"
  value = {
    for idx, rule in aws_vpc_security_group_egress_rule.this : idx => {
      id          = rule.security_group_rule_id
      description = rule.description
      ip_protocol = rule.ip_protocol
      from_port   = rule.from_port
      to_port     = rule.to_port
      cidr_ipv4   = rule.cidr_ipv4
      cidr_ipv6   = rule.cidr_ipv6
      tags        = rule.tags_all
    }
  }
}

output "result" {
  description = "The complete security group configuration result"
  value = {
    security_group = {
      id          = aws_security_group.this.id
      arn         = aws_security_group.this.arn
      name        = aws_security_group.this.name
      description = aws_security_group.this.description
      vpc_id      = aws_security_group.this.vpc_id
      owner_id    = aws_security_group.this.owner_id
      tags_all    = aws_security_group.this.tags_all
    }
    ingress_rules = {
      for idx, rule in aws_vpc_security_group_ingress_rule.this : idx => {
        id          = rule.security_group_rule_id
        description = rule.description
        ip_protocol = rule.ip_protocol
        from_port   = rule.from_port
        to_port     = rule.to_port
        cidr_ipv4   = rule.cidr_ipv4
        cidr_ipv6   = rule.cidr_ipv6
        tags        = rule.tags_all
      }
    }
    egress_rules = {
      for idx, rule in aws_vpc_security_group_egress_rule.this : idx => {
        id          = rule.security_group_rule_id
        description = rule.description
        ip_protocol = rule.ip_protocol
        from_port   = rule.from_port
        to_port     = rule.to_port
        cidr_ipv4   = rule.cidr_ipv4
        cidr_ipv6   = rule.cidr_ipv6
        tags        = rule.tags_all
      }
    }
  }
}
