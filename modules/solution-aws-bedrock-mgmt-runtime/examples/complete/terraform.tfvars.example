# Example terraform.tfvars file for Bedrock management runtime deployment
# Copy this file to terraform.tfvars and customize the values for your environment

# Required variables - must be provided
vpc_id     = "vpc-0123456789abcdef0"  # Replace with your VPC ID
subnet_ids = [
  "subnet-0123456789abcdef0",         # Replace with your subnet IDs
  "subnet-0fedcba9876543210"
]

# Environment configuration
environment  = "dev"
project_name = "bedrock-mgmt"
region       = "us-east-1"

# Security configuration
allowed_principals = [
  "arn:aws:iam::123456789012:root",   # Replace with your AWS account ID
  "arn:aws:iam::123456789012:role/BedrockUserRole"
]

# Feature toggles
enable_guardrails                = true
enable_model_invocation_logging  = true
enable_cloudtrail_logging        = true

# Compliance settings
data_residency_region = "us-east-1"
compliance_framework  = "SOC2"
retention_days        = 90

# Resource tags
tags = {
  "Terraform"     = "true"
  "Environment"   = "dev"
  "Project"       = "bedrock-mgmt-runtime"
  "Owner"         = "Platform Team"
  "CostCenter"    = "Engineering"
  "Compliance"    = "SOC2"
  "DataClass"     = "Confidential"
}

# ========================================
# EXTENDED MONITORING CONFIGURATION
# ========================================

# Enable/disable specific monitoring components
enable_agents_monitoring                  = true
enable_knowledge_base_monitoring         = true
enable_guardrails_monitoring             = true
enable_training_monitoring               = true
enable_api_call_monitoring               = true
enable_comprehensive_health_monitoring   = true

# Alerting thresholds for different services
agents_error_threshold           = 5      # Errors per evaluation period
kb_error_threshold              = 5      # Knowledge Base errors per evaluation period
agents_throttle_threshold       = 10     # Agent throttles per evaluation period
kb_throttle_threshold          = 10     # KB throttles per evaluation period
agents_latency_threshold_ms    = 15000  # 15 seconds
kb_latency_threshold_ms        = 5000   # 5 seconds
guardrails_blocked_threshold   = 50     # Blocked requests per evaluation period
training_job_failure_threshold = 0      # Zero tolerance for training failures

# SNS alerting subscriptions (customize for your notification preferences)
critical_alert_subscriptions = {
  "ops-team-email" = {
    protocol = "email"
    endpoint = "ops-team@company.com"  # Replace with your email
  }
  # Uncomment to add SMS alerts
  # "ops-team-sms" = {
  #   protocol = "sms"
  #   endpoint = "+1234567890"  # Replace with your phone number
  # }
}

performance_alert_subscriptions = {
  "performance-team-email" = {
    protocol = "email"
    endpoint = "performance-team@company.com"  # Replace with your email
  }
}

cost_alert_subscriptions = {
  "finops-team-email" = {
    protocol = "email"
    endpoint = "finops-team@company.com"  # Replace with your email
  }
}

# Advanced alarm settings
alarm_evaluation_periods = 2
alarm_datapoints_to_alarm = 2
alarm_period = 300  # 5 minutes

# Anomaly detection settings
enable_anomaly_detection = true
anomaly_threshold = 2
token_anomaly_threshold = 2

# Maintenance window configuration (optional)
# maintenance_window_alarm_arn = "arn:aws:cloudwatch:us-east-1:123456789012:alarm:maintenance-window"
# maintenance_suppression_extension_period = 300
# maintenance_suppression_wait_period = 300

# ========================================
# BUDGET MONITORING CONFIGURATION
# ========================================

# Budget control
enable_budget_monitoring       = true
enable_token_budget_monitoring = true

# Budget limits
bedrock_monthly_budget_limit = "1000"    # Monthly cost budget in USD
token_monthly_budget_limit   = "1000000" # Monthly token usage limit

# Primary notification email (replace with your email)
budget_notification_email = "jq@aol.com"

# Multiple notification emails for different alert types
budget_notification_emails = ["jq@aol.com"]
budget_warning_emails     = ["jq@aol.com"]                    # 50% threshold alerts
budget_critical_emails    = ["jq@aol.com", "admin@company.com"] # 80% threshold alerts  
budget_forecast_emails    = ["jq@aol.com", "finance@company.com"] # 100% forecast alerts

# Budget thresholds (percentages)
budget_warning_threshold  = 50   # Early warning at 50%
budget_critical_threshold = 80   # Critical alert at 80%
budget_forecast_threshold = 100  # Forecast alert at 100%

# Token budget configuration
token_budget_threshold = 80
token_budget_emails   = ["jq@aol.com"]

# Anomaly detection
enable_budget_anomaly_detection  = true
budget_anomaly_threshold        = 100   # Dollar threshold for anomalies
budget_anomaly_frequency        = "DAILY" # DAILY, IMMEDIATE, or WEEKLY
budget_anomaly_emails           = ["jq@aol.com"]

enable_token_anomaly_detection  = true
token_anomaly_threshold_value   = 1000  # Token threshold for anomalies

# Advanced budget settings
include_related_ai_services         = false  # Include SageMaker, Comprehend, etc.
budget_auto_adjust_type            = null    # HISTORICAL, FORECAST, or null
budget_historical_adjustment_period = 6      # Number of periods for historical adjustment

# Budget cost filters (optional - filter by tags)
budget_cost_filter_tags = {
  # Environment = ["production", "staging"]
  # Team        = ["ai-team"]
}
